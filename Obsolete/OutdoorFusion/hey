import supabase
import pandas as pd

# Initialize Supabase client
supabase_url = 'https://dukkznhovjjzfslnleyy.supabase.co'
supabase_key = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImR1a2t6bmhvdmpqemZzbG5sZXl5Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTY4NDMxMzI5NywiZXhwIjoxOTk5ODg5Mjk3fQ.2BBtSMjiJzyZNumptBJ-apSKI3H5DM3RdCQ8Z1z3ku8'

client = supabase.create_client(supabase_url, supabase_key)

# Orders data
table_name = "Northwind.Orders"
table = client.table(table_name)
response = table.select('*').execute()
data = response.data
orders = pd.DataFrame(data)
# Customers data
table_name = "Northwind.Customers"
table = client.table(table_name)
response = table.select('*').execute()
data = response.data
customers = pd.DataFrame(data)
# Products data
table_name = "Northwind.Products"
table = client.table(table_name)
response = table.select('*').execute()
data = response.data
products = pd.DataFrame(data)
# Day data
table_name = "Northwind.Day"
table = client.table(table_name)
response = table.select('*').execute()
data = response.data
day = pd.DataFrame(data)
# Shipping Destination data
table_name = "Northwind.Shipping_destination"
table = client.table(table_name)
response = table.select('*').execute()
data = response.data
shipping_destination = pd.DataFrame(data)
# Orders omzetten naar outdoorfusion orders tabel
orders = orders.drop('OrderID', axis=1)
orders = orders.drop('ShipVia', axis=1)
orders = orders.drop('Freight', axis=1)
orders = orders.drop('EmployeeID', axis=1)
orders = orders.drop('UnitsInStock', axis=1)
orders = orders.drop('UnitsOnOrder', axis=1)
orders = orders.drop('ReorderLevel', axis=1)
orders['UnitDiscount'] = round(orders['UnitPriceBeforeDiscount'] - orders['UnitPriceAfterDiscount'], 2)
orders = orders.drop('Discount', axis=1)
orders = orders.drop('UnitPriceAfterDiscount', axis=1)
orders = orders.rename(columns={'UnitPriceBeforeDiscount': 'UnitPrice'})
#Orders is klaar
#Products omzetten naar outdoorfusion products tabel
products = products.drop('SupplierID', axis=1)
products = products.drop('CategoryID', axis=1)
products = products.drop('QuantityPerUnit', axis=1)
products = products.drop('Discontinued', axis=1)
products = products.drop('Description', axis=1)
#Products is klaar
#Customers omzetten naar outdoorfusion customers tabel
customers = customers.drop('ContactTitle', axis=1)
customers = customers.drop('PostalCode', axis=1)
customers = customers.drop('Phone', axis=1)
customers = customers.drop('Fax', axis=1)
#Als companyname leeg is, dan is het een person, anders is het een store
customers['CustomerType'] = customers['CompanyName'].apply(lambda x: 'Store' if pd.notnull(x) else 'Person')
#Als customertype gelijk is aan store wordt de nieuwe name column gelijk aan companyname, anders gelijk aan contactname
customers['Name'] = customers.apply(lambda row: row['CompanyName'] if row['CustomerType'] == 'Store' else row['ContactName'], axis=1)
customers = customers.drop('CompanyName', axis=1)
customers = customers.drop('ContactName', axis=1)
#Customers is klaar
#Shipping_Destination omzetten naar outdoorfusion shipping_destination tabel
shipping_destination = shipping_destination.drop('ShipPostalCode', axis=1)
shipping_destination = shipping_destination.drop('ShipName', axis=1)
#Shipping_destination is klaar
#Day omzetten naar outdoorfusion day tabel
day = day.drop('REQUIRED_DATE', axis=1)
day = day.drop('REQUIRED_MONTH', axis=1)
day = day.drop('REQUIRED_YEAR', axis=1)
day = day.drop('REQUIRED_QUARTER', axis=1)
#Day is klaar